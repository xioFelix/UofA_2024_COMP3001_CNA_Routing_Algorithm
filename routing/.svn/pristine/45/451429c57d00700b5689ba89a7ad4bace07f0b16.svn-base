#!/usr/bin/env python3

import sys

class Router:
    def __init__(self, name):
        self.name = name
        self.neighbors = {}
        self.lsdb = {}
        self.routing_table = {}

    def add_neighbor(self, neighbor, cost):
        self.neighbors[neighbor] = cost
        pass

    def remove_neighbor(self, neighbor):
        if neighbor in self.neighbors:
            del self.neighbors[neighbor]

    def update_lsdb(self, link_state):
        # TODO: Implement the logic of updating the link state database
        pass

    def run_dijkstra(self):
        # TODO: Implement the Dijkstra algorithm and update the routing table
        pass

    def print_neighbor_table(self):
        # TODO: Realize the logic of printing neighbor tables
        pass

    def print_lsdb(self):
        # TODO: Realize the logic of printing link state database
        pass

    def print_routing_table(self):
        # TODO: Implement the logic of printing routing tables
        pass


def parse_input():
    # TODO: Realize the logic of parsing input
    pass


def main():
    routers = {}

    # Parse the initial input and create a router object
    parse_input()

    # Handle link status updates
    for line in sys.stdin:
        if line.strip() == "END":
            break
        # TODO: Parse the link status update, update the router's link status database and neighbor table
        # TODO: Print their neighbor tables, link status databases and routing tables according to the list of selected routers.


if __name__ == "__main__":
    main()
